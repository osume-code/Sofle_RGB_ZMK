/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

//Encoder Support
//Alps Alpine EC11N1524402: 30 Detent, 15PPR, 2 Channel, Quadrature, 15000 Cycle

/ {
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        label = "RIGHT_ENCODER";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };
};

/ {
    macros {
        // System and Power

        taskmanger: tm {
            label = "TASK_MANAGER";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp ESC>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        off: off {
            label = "SHUTDOWN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp U>;
        };

        // Microphones
        // Browser Controls

        tab_right: tab_right {
            label = "TAB_RIGHT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;
        };

        tab_left: tab_left {
            label = "TAB_LEFT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT>;
        };

        close_tab: close_tab {
            label = "CLOSE_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        //Unicode Special Characters
        //Need regkey HKEY_CURRENT_USER\Control Panel\Input Method, REG_SZ EnableHexNumpad = 1
        //Symbols       

        euro: euro {
            label = "EURO";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N0 &kp A &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        us_cent: us_cent {
            label = "US_CENT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        uk_pnd: uk_pnd {
            label = "UK_POUND";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        degree: degree {
            label = "DEGREE_SIGN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kt LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };

        //IPA
        //Diacritical Characters
        // Fractions
        // Operators

        zoom_in: zoom_in {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "ZOOM_IN";
        };

        zoom_out: zoom_out {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp MINUS>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "ZOOM_OUT";
        };

        zoom_100: zoom_100 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp NUMBER_0>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "ZOOM_100";
        };

        alt_tab_enter: alttab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LALT>, <&macro_tap>, <&to 4>;

            label = "ALTTAB";
        };

        alt_tab_leave: alt_tab_leave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_release>, <&kp LALT>, <&macro_tap>, <&to 0>;

            label = "ALT_TAB_LEAVE";
        };
    };
};

//Combos, note that key listing is zero indexed
//lshift: 36
//rshift: 49

/ {
    combos {
        compatible = "zmk,combos";

        // Characters
        // Fractions
        // Operators
    };
};

// Mod Morphs, Encoder, Tap-Dances

/ {
    behaviors {
        // Mod Morph
        // RGB

        rgb_bri_sat_inc: rgb_bri_sat_inc {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_BRIGHTNESS_SATURATION_INCREASE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_BRI>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        rgb_bri_sat_dec: rgb_bri_sat_dec {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_BRIGHTNESS_SATURATION_DECREASE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAD>, <&rgb_ug RGB_BRD>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        rgb_inc: rgb_inc {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_INCREASE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_bri_sat_inc>;

            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };

        rgb_dec: rgb_dec {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_DECREASE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUD>, <&rgb_bri_sat_dec>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // System Functions  

        ret_menu: ret_menu {
            compatible = "zmk,behavior-mod-morph";
            label = "RETURN_MENU";
            #binding-cells = <0>;
            bindings = <&kp RET>, <&kp K_APPLICATION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Special Characters - Capitalizations
        // Special Characters - Other
        // Encoder

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_inc>, <&rgb_dec>;
        };

        tab_browser: tab_browser {
            compatible = "zmk,behavior-sensor-rotate";
            label = "TAB_BROWSER";
            #sensor-binding-cells = <0>;
            bindings = <&tab_left>, <&tab_right>;

            tap-ms = <100>;
        };

        // Tap Dance

        cc: cc {
            compatible = "zmk,behavior-tap-dance";
            label = "COLOR_CYCLE";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings =
                <&rgb_ug RGB_COLOR_HSB(0,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(10,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(35,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(120,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(240,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(285,100,20)>;
        };

        clcw: clcw {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_LOCK_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp CLCK>, <&caps_word>;
        };

        lscw: lscw {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };

        rscw: rscw {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&caps_word>;
        };

        stm: stm {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_TASK_MANAGER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&taskmanger>;
        };

        td_btr: td_btr {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUE_TOOTH_RELEASE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&bt BT_CLR>;
        };

        playpause_next: playpause_next {
            compatible = "zmk,behavior-tap-dance";
            label = "PLAYPAUSE_NEXT";
            #binding-cells = <0>;
            bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;

            tapping-term-ms = <400>;
        };

        coma: coma {
            compatible = "zmk,behavior-mod-morph";
            label = "COMA";
            bindings = <&kp COMMA>, <&kp LEFT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        dot: dot {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT";
            bindings = <&kp DOT>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        zoom: zoom {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ZOOM";
            #sensor-binding-cells = <0>;
            bindings = <&zoom_out>, <&zoom_in>;

            tap-ms = <100>;
        };

        left_right: left_right {
            compatible = "zmk,behavior-sensor-rotate";
            label = "LEFT_RIGHT";
            #sensor-binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp LEFT>;

            tap-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   | DEL   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // | CAPS  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |MUTE SPK|  |ClS  TAB|  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE  | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                     &kp N6  &kp N7     &kp N8     &kp N9      &kp N0    &kp MINUS
&kp ESC    &kp Q   &kp W     &kp E     &kp R      &kp T                                      &kp Y   &kp U      &kp I      &kp O       &kp P     &kp EQUAL
&kp TAB    &kp A   &kp S     &kp D     &kp F      &kp G                                      &kp H   &kp J      &kp K      &kp L       &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V      &kp B   &alt_tab_enter    &playpause_next  &kp N   &kp M      &coma      &dot        &kp FSLH  &to 1
                   &kp LGUI  &kp LALT  &kp LCTRL  &mo 2   &kp SPACE         &kp BACKSPACE    &mo 3   &kp ENTER  &kp RCTRL  &kp DELETE
            >;

            sensor-bindings = <&tab_browser>, <&left_right>;
        };

        colemak {
            bindings = <
&kp GRAVE  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                     &kp N6  &kp N7     &kp N8     &kp N9      &kp N0    &kp MINUS
&kp ESC    &kp Q   &kp W     &kp F     &kp P      &kp B                                      &kp J   &kp L      &kp U      &kp Y       &kp SEMI  &kp EQUAL
&kp TAB    &kp A   &kp R     &kp S     &kp T      &kp G                                      &kp M   &kp N      &kp E      &kp I       &kp O     &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp D      &kp V   &alt_tab_enter    &playpause_next  &kp K   &kp H      &coma      &dot        &kp FSLH  &to 0
                   &kp LGUI  &kp LALT  &kp LCTRL  &mo 2   &kp SPACE         &kp BACKSPACE    &mo 3   &kp ENTER  &kp RCTRL  &kp DELETE
            >;

            sensor-bindings = <&tab_browser>, <&inc_dec_kp RIGHT LEFT>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |    F1 |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |       |  `  |  ~  |  <   |  >   |  ?   |                   |  *   |  {    |  }    | HOME |  END  |       |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  _   |  (    |  )    |  ;   |   |   | COLOR |
            // |       |  =  |  -  |  +   |  &   |  |   |  RGB   |  |       |  ^   |  [    |  ]    |  :   |   \   | POWER |
            //               |     |      |      |      |  CODE  |  |       |      |       |       |      |

            bindings = <
&kp GRAVE  &kp F1       &kp F2      &kp F3                &kp F4                 &kp F5                                 &kp F6  &kp F7  &kp F8   &kp F9        &kp F10    &kp F11
&trans     &kp EXCL     &kp AT      &kp LBKT              &kp RBKT               &kp PIPE                               &kp N7  &kp N8  &kp N9   &kp ASTERISK  &kp F13    &kp F12
&trans     &kp HASH     &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SQT                                &kp N4  &kp N5  &kp N6   &kp PLUS      &kp ENTER  &kp CAPSLOCK
&trans     &kp PERCENT  &kp MINUS   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp TILDE  &zoom_100    &kp F14        &kp N1  &kp N2  &kp N3   &kp SLASH     &kp LEFT   &kp RIGHT_ARROW
                        &trans      &trans                &trans                 &trans     &trans       &kp BACKSPACE  &trans  &kp N0  &kp DOT  &kp EQUAL
            >;

            sensor-bindings = <&zoom>, <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | HUE+ |  =  |   /   |   *  |   -   | EFF+ |
            // |BRI+ | PSCR | INS  |   ↑   |   @   |   %  |                | HUE- |  7  |   8   |   9  |   +   | BKSP |
            // |BRI- | RGB  |  ←   |   ↓   |   →   |   $  |                | SAT+ |  4  |   5   |   6  |   +   | SPD+ |
            // |TASK |BT/USB|      |  PREV |  NEXT |   #  |PL/PS |  |      | SAT- |  1  |   2   |   3  | ENTER | SPD- |
            //              |      |       |       |      |      |  |      |  0   |  0  |   0   |   .  |

            bindings = <
&td_btr          &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                        &rgb_ug RGB_HUI  &trans    &trans          &trans       &trans  &rgb_ug RGB_EFF
&rgb_ug RGB_BRI  &kp PSCRN        &trans        &kp UP        &trans        &trans                                              &rgb_ug RGB_HUD  &trans    &kp UP_ARROW    &trans       &trans  &rgb_ug RGB_SPI
&rgb_ug RGB_BRD  &rgb_ug RGB_TOG  &kp LEFT      &kp DOWN      &kp RIGHT     &trans                                              &rgb_ug RGB_SAI  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT    &trans  &rgb_ug RGB_SPD
&stm             &out OUT_TOG     &trans        &trans        &trans        &trans        &ext_power EP_TOG    &rgb_ug RGB_TOG  &rgb_ug RGB_SAD  &trans    &trans          &trans       &trans  &to 5
                                  &bootloader   &trans        &trans        &trans        &trans               &trans           &trans           &trans    &trans          &bootloader
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>, <&rgb_encoder>;
        };

        alt-tab {
            bindings = <
&alt_tab_leave  &alt_tab_enter  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave                                    &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave
&alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave                                    &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave
&alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave                                    &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave
&alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave    &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave
                                &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave    &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave  &alt_tab_leave
            >;

            sensor-bindings = <&inc_dec_kp LS(TAB) TAB>, <&inc_dec_kp Y Z>;
        };

        gaming {
            bindings = <
&kp GRAVE  &kp N1     &kp N2    &kp N3    &kp N4  &kp N5                              &kp N6  &kp N7     &kp N8     &kp N9      &kp N0    &kp MINUS
&kp ESC    &kp T      &kp Q     &kp W     &kp E   &kp R                               &kp Y   &kp U      &kp I      &kp O       &kp P     &kp EQUAL
&kp TAB    &kp G      &kp A     &kp S     &kp D   &kp F                               &kp H   &kp J      &kp K      &kp L       &kp SEMI  &kp SQT
&kp LCTRL  &kp LSHFT  &kp Z     &kp X     &kp C   &kp V   &kp M        &kp F          &kp N   &kp M      &coma      &dot        &kp FSLH  &to 0
                      &kp LGUI  &kp LALT  &kp Y   &kp B   &kp SPACE    &kp BACKSPACE  &mo 3   &kp ENTER  &kp RCTRL  &kp DELETE
            >;

            sensor-bindings =
                <&inc_dec_kp C_AC_SCROLL_DOWN C_AC_SCROLL_UP>,
                <&left_right>;
        };
    };
};
